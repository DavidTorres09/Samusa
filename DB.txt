CREATE DATABASE [SAMUSADB]

USE SAMUSADB

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [SAMUSADB].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO

/*ALTER DATABASE [SAMUSADB] SET ANSI_NULL_DEFAULT OFF 
GO

ALTER DATABASE [SAMUSADB] SET ANSI_NULLS OFF 
GO

ALTER DATABASE [SAMUSADB] SET ANSI_PADDING OFF 
GO

ALTER DATABASE [SAMUSADB] SET ANSI_WARNINGS OFF 
GO

ALTER DATABASE [SAMUSADB] SET ARITHABORT OFF 
GO

ALTER DATABASE [SAMUSADB] SET AUTO_CLOSE OFF 
GO

ALTER DATABASE [SAMUSADB] SET AUTO_SHRINK OFF 
GO

ALTER DATABASE [SAMUSADB] SET AUTO_UPDATE_STATISTICS ON 
GO

ALTER DATABASE [SAMUSADB] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO

ALTER DATABASE [SAMUSADB] SET CURSOR_DEFAULT  GLOBAL 
GO

ALTER DATABASE [SAMUSADB] SET CONCAT_NULL_YIELDS_NULL OFF 
GO

ALTER DATABASE [SAMUSADB] SET NUMERIC_ROUNDABORT OFF 
GO

ALTER DATABASE [SAMUSADB] SET QUOTED_IDENTIFIER OFF 
GO

ALTER DATABASE [SAMUSADB] SET RECURSIVE_TRIGGERS OFF 
GO

ALTER DATABASE [SAMUSADB] SET  DISABLE_BROKER 
GO

ALTER DATABASE [SAMUSADB] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO

ALTER DATABASE [SAMUSADB] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO

ALTER DATABASE [SAMUSADB] SET TRUSTWORTHY OFF 
GO

ALTER DATABASE [SAMUSADB] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO

ALTER DATABASE [SAMUSADB] SET PARAMETERIZATION SIMPLE 
GO

ALTER DATABASE [SAMUSADB] SET READ_COMMITTED_SNAPSHOT OFF 
GO

ALTER DATABASE [SAMUSADB] SET HONOR_BROKER_PRIORITY OFF 
GO

ALTER DATABASE [SAMUSADB] SET RECOVERY SIMPLE 
GO

ALTER DATABASE [SAMUSADB] SET  MULTI_USER 
GO

ALTER DATABASE [SAMUSADB] SET PAGE_VERIFY CHECKSUM  
GO

ALTER DATABASE [SAMUSADB] SET DB_CHAINING OFF 
GO

ALTER DATABASE [SAMUSADB] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO

ALTER DATABASE [SAMUSADB] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO

ALTER DATABASE [SAMUSADB] SET DELAYED_DURABILITY = DISABLED 
GO

ALTER DATABASE [SAMUSADB] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO

ALTER DATABASE [SAMUSADB] SET QUERY_STORE = ON
GO

ALTER DATABASE [SAMUSADB] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
GO

ALTER DATABASE [SAMUSADB] SET  READ_WRITE 
GO
*/

CREATE TABLE Persona (
	DNI NUMERIC(12,0) NOT NULL,
	Nombre VARCHAR(25) NOT NULL, 
	PrimerApellido VARCHAR(25) NOT NULL, 
	SegundoApellido VARCHAR(25) NULL,
	Telefono NUMERIC(8,0) NULL,
	Email VARCHAR(40) NOT NULL, 
	EsNacional BIT NOT NULL,
	CONSTRAINT PK_Persona PRIMARY KEY (DNI)
);

CREATE TABLE Cliente (
	IDCliente NUMERIC (9,0) NOT NULL,
    Direccion VARCHAR (80) NOT NULL,
    DNI_Persona NUMERIC (12,0) NOT NULL,
    CONSTRAINT PK_Cliente PRIMARY KEY (IDCliente),
    CONSTRAINT FK_Cliente_Persona FOREIGN KEY (DNI_Persona) REFERENCES Persona(DNI) 
);

CREATE TABLE Colaborador (
	IDColaborador NUMERIC (9,0) NOT NULL,
	FechaIngreso DATE NOT NULL,
    Puesto VARCHAR (80) NOT NULL,
    DNI_Persona NUMERIC (12,0) NOT NULL,
    CONSTRAINT PK_Colaborador PRIMARY KEY (IDColaborador),
    CONSTRAINT FK_Colaborador_Persona FOREIGN KEY (DNI_Persona) REFERENCES Persona(DNI) 
);

CREATE TABLE Importaciones (
	IDImpSeguimiento INT NOT NULL IDENTITY(1,1),
	ID_DNI NUMERIC (12,0) NOT NULL,
	FechaInicio DATETIME NOT NULL,
	FechaFinalizacion DATE NOT NULL,
	FechaEsperada DATE NULL,
	Prioridad VARCHAR (80) NOT NULL,
	CONSTRAINT PK_IDImpSeguimiento PRIMARY KEY (IDImpSeguimiento),
    CONSTRAINT FK_Importaciones_Persona FOREIGN KEY (ID_DNI) REFERENCES Persona(DNI)
);

CREATE TABLE Exportaciones (
	IDExpSeguimiento INT NOT NULL IDENTITY(1,1),
	ID_DNI NUMERIC (12,0) NOT NULL,
	FechaInicio DATETIME NOT NULL,
	FechaFinalizacion DATE NOT NULL,
	FechaEsperada DATE NULL,
	Prioridad VARCHAR (80) NOT NULL,
	CONSTRAINT PK_IDExpSeguimiento PRIMARY KEY (IDExpSeguimiento),
    CONSTRAINT FK_Exportaciones_Persona FOREIGN KEY (ID_DNI) REFERENCES Persona(DNI)
);

CREATE TABLE Paqueteria (
	IDPaqSeguimiento INT NOT NULL IDENTITY(1,1),
	ID_DNI NUMERIC (12,0) NOT NULL,
	NumCasillero VARCHAR (80) NOT NULL,
	NumTracking VARCHAR (80) NOT NULL,
	TipoProducto VARCHAR (80) NOT NULL,
	DirectOrigen VARCHAR (200) NOT NULL,
	DirectDestino VARCHAR (200) NOT NULL,
	FechaRegistro DATE NOT NULL,
	FechaEsperada DATE NULL,
	CONSTRAINT PK_IDPaqSeguimiento PRIMARY KEY (IDPaqSeguimiento),
    CONSTRAINT FK_Paqueteria_Persona FOREIGN KEY (ID_DNI) REFERENCES Persona(DNI)
);

CREATE TABLE Soporte (
	IDFormulario INT NOT NULL IDENTITY(1,1),
	ID_DNI NUMERIC (12,0) NOT NULL,
	FechaInicio DATETIME NOT NULL,
	FechaFinalizacion DATE NOT NULL,
	FechaEsperada DATE NULL,
	Prioridad VARCHAR (80) NOT NULL,
	CONSTRAINT PK_IDFormulario PRIMARY KEY (IDFormulario),
    CONSTRAINT FK_Soporte_Cliente FOREIGN KEY (ID_DNI) REFERENCES Persona(DNI)
);

CREATE TABLE FormularioAtencion (
	IDFormularioAtencion INT NOT NULL IDENTITY(1,1),
	IDFormulario INT NOT NULL,
    VINVehiculo VARCHAR(35) NOT NULL,
	EstadoAtencion VARCHAR(35) NOT NULL,
	Detalle VARCHAR(300) NOT NULL,
    CONSTRAINT PK_IDFormularioAtencion PRIMARY KEY (IDFormularioAtencion)
);

CREATE TABLE RevisionAlmacen (
	IDFormAlmacen INT NOT NULL IDENTITY(1,1),
	VIN VARCHAR(35) NOT NULL,
	Marca VARCHAR(20) NOT NULL,
    Modelo VARCHAR(20) NOT NULL,
    Color VARCHAR(20) NOT NULL,
    CostoVehiculo NUMERIC(9,0) DEFAULT 0 NOT NULL,
    AnioVehiculo NUMERIC(9,0) NOT NULL,
	DNI_Dueno NUMERIC (12,0) NOT NULL,
    Placa NUMERIC(9,0) NULL, -- El vehículo puede aún no tener placa
    EstadoOP VARCHAR(20) NOT NULL,
	CONSTRAINT PK_Vehiculo PRIMARY KEY (VIN)
);

CREATE TABLE Cotizaciones (
	IDCotizacion INT NOT NULL IDENTITY(1,1),
	ID_DNI NUMERIC (12,0) NOT NULL,
	IDColaborador NUMERIC (9,0) NOT NULL,
	TipoProducto VARCHAR(35) NOT NULL,
	Producto VARCHAR(20) NOT NULL,
	PorcentajeIMP VARCHAR(35) NOT NULL,
	EnlaceRef VARCHAR(500) NOT NULL,
	FechaCreacion DATETIME NOT NULL,
	CONSTRAINT PK_IDCotizacion PRIMARY KEY (IDCotizacion), 
	CONSTRAINT FK_Cotizacion_Cliente FOREIGN KEY (ID_DNI) REFERENCES Persona(DNI),
	CONSTRAINT FK_Colaborador_Cotizacion FOREIGN KEY (IDColaborador) REFERENCES Colaborador(IDColaborador)
);